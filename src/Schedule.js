import React, { useState,useMemo } from "react";
import "./Schedule.css";
import { useNavigate } from "react-router-dom";

const weeklySchedule = {
  –ü–æ–Ω–µ–¥—ñ–ª–æ–∫: [
    {
      pair: "2 –ø–∞—Ä–∞",
      time: "10:05 - 11:25",
      subjects: [
        {
          title: "–°–∏—Å—Ç–µ–º–Ω–∏–π –∞–Ω–∞–ª—ñ–∑",
          teacher: "–ö–æ–≤—ñ–≤—á–∞–∫ –Ø.–í.",
          type: "–õ–µ–∫—Ü—ñ—è",
          room: "807 V –Ω.–∫.",
          subgroup: 1,
          numerator: true,
          denominator: true,
        },
      ],
    },
    {
      pair: "3 –ø–∞—Ä–∞",
      time: "11:40 - 13:00",
      subjects: [
        {
          title: "–ö–æ–º–ø'—é—Ç–µ—Ä–Ω—ñ –º–µ—Ä–µ–∂—ñ",
          teacher: "–û–±–µ–ª—å–æ–≤—Å—å–∫–∞ –ö.–ú.",
          type: "–õ–µ–∫—Ü—ñ—è",
          room: "807 V –Ω.–∫.",
          subgroup: 1,
          numerator: true,
        },
      ],
    },
    {
      pair: "4 –ø–∞—Ä–∞",
      time: "14:50 - 16:10",
      subjects: [
        {
          title: "–î–æ—Å–ª—ñ–¥–∂–µ–Ω–Ω—è –æ–ø–µ—Ä–∞—Ü—ñ–π",
          teacher: "–†—ñ–ø–∞–∫ –ù.–°.",
          type: "–õ–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω–∞",
          room: "803 V –Ω.–∫.",
          subgroup: 1,
          denominator: true,
        },
        {},
      ],
    },
  ],
  –í—ñ–≤—Ç–æ—Ä–æ–∫: [
    {
      pair: "3 –ø–∞—Ä–∞",
      time: "11:40 - 13:00",
      subjects: [
        {},
        {
          title: "–î–æ—Å–ª—ñ–¥–∂–µ–Ω–Ω—è –æ–ø–µ—Ä–∞—Ü—ñ–π",
          teacher: "–†—É–¥–∞–≤—Å—å–∫–∏–π –î.–í.",
          type: "–õ–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω–∞",
          room: "804B V –Ω.–∫.",
          numerator: true,
          subgroup: 2,
        },
      ],
    },
    {
      pair: "4 –ø–∞—Ä–∞",
      time: "13:15 - 14:35",
      subjects: [
        {
          title: "–ö–æ–º–∞–Ω–¥–Ω–∞ —Ä–æ–±–æ—Ç–∞ –Ü–¢-–≥–∞–ª—É–∑—ñ —Ç–∞ –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü—ñ–π–Ω—ñ –Ω–∞–≤–∏—á–∫–∏",
          teacher: "–ë–∞—Ç—é–∫ –ê.–Ñ.",
          type: "–õ–µ–∫—Ü—ñ—è",
          room: "807 V –Ω.–∫.",
          numerator: true,
          subgroup: 1,
        },
      ],
    },
    {
      pair: "5 –ø–∞—Ä–∞",
      time: "14:50 - 16:10",
      subjects: [
        {
          title: "–ö–æ–º–∞–Ω–¥–Ω–∞ —Ä–æ–±–æ—Ç–∞ –Ü–¢-–≥–∞–ª—É–∑—ñ —Ç–∞ –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü—ñ–π–Ω—ñ –Ω–∞–≤–∏—á–∫–∏",
          teacher: "–ú–µ–ª—å–Ω–∏–∫ –†.–í.",
          type: "–õ–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω–∞",
          room: "107–ê V –Ω.–∫.",
          subgroup: 1,
        },
        {
          title: "–ö–æ–º–∞–Ω–¥–Ω–∞ —Ä–æ–±–æ—Ç–∞ –Ü–¢-–≥–∞–ª—É–∑—ñ —Ç–∞ –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü—ñ–π–Ω—ñ –Ω–∞–≤–∏—á–∫–∏",
          teacher: "–•–∏–º–∏—Ü—è –ù.–û.",
          type: "–õ–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω–∞",
          room: "511 V –Ω.–∫.",
          subgroup: 2,
        },
      ],
    },
  ],
  –°–µ—Ä–µ–¥–∞: [
    {
      pair: "1 –ø–∞—Ä–∞",
      time: "08:30 - 09:50",
      subjects: [
        {
          title: "–ö–æ–º–ø'—é—Ç–µ—Ä–Ω—ñ –º–µ—Ä–µ–∂—ñ",
          teacher: "–ê–Ω—Ç–æ–Ω—ñ–≤ –í.–Ø.",
          type: "–õ–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω–∞",
          room: "803 V –Ω.–∫.",
          subgroup: 1,
        },
        {
          title: "–í–µ–±—Ç–µ—Ö–Ω–æ–ª–æ–≥—ñ—ó —Ç–∞ —Ä–æ–∑—Ä–æ–±–∫–∞ –≤–µ–±–∑–∞—Å—Ç–æ—Å—É–≤–∞–Ω—å",
          teacher: "–ê—Ä–±—É–∑–æ–≤ –ú.–í.",
          type: "–õ–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω–∞",
          room: "804–ì V –Ω.–∫.",
          subgroup: 2,
        },
      ],
    },
    {
      pair: "2 –ø–∞—Ä–∞",
      time: "10:05 - 11:25",
      subjects: [
        {
          title: "–í–µ–±—Ç–µ—Ö–Ω–æ–ª–æ–≥—ñ—ó —Ç–∞ —Ä–æ–∑—Ä–æ–±–∫–∞ –≤–µ–±–∑–∞—Å—Ç–æ—Å—É–≤–∞–Ω—å",
          teacher: "–¢—Ä–æ—î–Ω –û.–ê.",
          type: "–õ–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω–∞",
          room: "804–ì V –Ω.–∫.",
          subgroup: 1,
        },
        {
          title: "–ö–æ–º–ø'—é—Ç–µ—Ä–Ω—ñ –º–µ—Ä–µ–∂—ñ",
          teacher: "–ê–Ω—Ç–æ–Ω—ñ–≤ –í.–Ø.",
          type: "–õ–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω–∞",
          room: "803 V –Ω.–∫.",
          subgroup: 2,
        },
      ],
    },
    {
      pair: "3 –ø–∞—Ä–∞",
      time: "11:40 - 13:00",
      subjects: [
        {
          title: "–°–∏—Å—Ç–µ–º–Ω–∏–π –∞–Ω–∞–ª—ñ–∑",
          teacher: "–î—É–±—É–∫ –í.–Ü.",
          type: "–ü—Ä–∞–∫—Ç–∏—á–Ω–∞",
          room: "311 V –Ω.–∫.",
          subgroup: 1,
        },
      ],
    },
  ],
  –ß–µ—Ç–≤–µ—Ä: [
  {
    pair: "1 –ø–∞—Ä–∞",
    time: "08:30 - 09:50",
    subjects: [
      {
        title: "–í–µ–±—Ç–µ—Ö–Ω–æ–ª–æ–≥—ñ—ó —Ç–∞ —Ä–æ–∑—Ä–æ–±–∫–∞ –≤–µ–±–∑–∞—Å—Ç–æ—Å—É–≤–∞–Ω—å",
        teacher: "–ö–∞–∑–∞—Ä—è–Ω –ê.–ì.",
        type: "–õ–µ–∫—Ü—ñ—è",
        room: "807 V –Ω.–∫.",
      },
    ],
  },
  {
    pair: "2 –ø–∞—Ä–∞",
    time: "10:05 - 11:25",
    subjects: [
      {
        title: "–î–æ—Å–ª—ñ–¥–∂–µ–Ω–Ω—è –æ–ø–µ—Ä–∞—Ü—ñ–π",
        teacher: "–ö–∞–∑–∏–º–∏—Ä–∞ –Ü.–Ø.",
        type: "–õ–µ–∫—Ü—ñ—è",
        room: "807 V –Ω.–∫.",
      },
    ],
  },
],

  –ü º—è—Ç–Ω–∏—Ü—è: [],
};



const Schedule = () => {
  const [selectedDay, setSelectedDay] = useState("–ü–æ–Ω–µ–¥—ñ–ª–æ–∫");
  const [searchTerm, setSearchTerm] = useState("");
  const [week, setWeek] = useState("–¶–µ–π —Ç–∏–∂–¥–µ–Ω—å");
  const [editingIndex, setEditingIndex] = useState(null);
  const [editValues, setEditValues] = useState({});
  const [searchType, setSearchType] = useState("title");
  const isNumeratorWeek = week === "–¶–µ–π —Ç–∏–∂–¥–µ–Ω—å";

  // –§—ñ–ª—å—Ç—Ä–∞—Ü—ñ—è —É useMemo, —â–æ–± –Ω–µ –≤–∏–∫–æ–Ω—É–≤–∞—Ç–∏ —ó—ó —â–æ—Ä–∞–∑—É –ø—Ä–∏ —Ä–µ–Ω–¥–µ—Ä—ñ –±–µ–∑ –∑–º—ñ–Ω –∑–∞–ª–µ–∂–Ω–æ—Å—Ç–µ–π
  const filteredSchedule = useMemo(() => {
    if (!searchTerm.trim()) {
      // –Ø–∫—â–æ –∑–∞–ø–∏—Ç –ø—É—Å—Ç–∏–π ‚Äî –ø–æ–∫–∞–∑—É—î–º–æ –≤–µ—Å—å —Ä–æ–∑–∫–ª–∞–¥
      return weeklySchedule;
    }

    const query = searchTerm.toLowerCase();

    const result = {};

    for (const [day, lessons] of Object.entries(weeklySchedule)) {
      const filteredLessons = lessons.filter(lesson =>
        lesson.subjects.some(subj => {
          if (!subj.title) return false;

          const title = subj.title.toLowerCase();
          const teacher = (subj.teacher || "").toLowerCase();

          if (searchType === "title") return title.includes(query);
          if (searchType === "teacher") return teacher.includes(query);
          // –¥–ª—è "both" –∞–±–æ –±—É–¥—å-—è–∫–æ–≥–æ —ñ–Ω—à–æ–≥–æ –≤–∞—Ä—ñ–∞–Ω—Ç—É
          return title.includes(query) || teacher.includes(query);
        })
      );

      if (filteredLessons.length > 0) {
        result[day] = filteredLessons;
      }
    }

    return result;
  }, [searchTerm, searchType]);

  // –î–ª—è —Ä–µ–Ω–¥–µ—Ä—É —É—Ä–æ–∫—ñ–≤ - –±–µ—Ä–µ–º–æ –≤–∂–µ —Ñ—ñ–ª—å—Ç—Ä–æ–≤–∞–Ω–∏–π —Ä–æ–∑–∫–ª–∞–¥ –¥–ª—è –≤–∏–±—Ä–∞–Ω–æ–≥–æ –¥–Ω—è
  const lessonsForSelectedDay = filteredSchedule[selectedDay] || [];

  const startEditing = (pairIndex, subjectIndex, subject) => {
    setEditingIndex(`${pairIndex}-${subjectIndex}`);
    setEditValues(subject);
  };

  const cancelEditing = () => {
    setEditingIndex(null);
    setEditValues({});
  };

  const saveEditing = (pairIndex, subjectIndex) => {
    weeklySchedule[selectedDay][pairIndex].subjects[subjectIndex] = editValues;
    setEditingIndex(null);
    setEditValues({});
  };

  const renderSubject = (subj, index, pairIndex) => {
    const isEditing = editingIndex === `${pairIndex}-${index}`;

    const shouldShow =
      (isNumeratorWeek && subj.numerator !== false) ||
      (!isNumeratorWeek && subj.denominator !== false);

    if (!subj.title || !shouldShow) {
      return (
        <div key={index} className="subject-card empty-card">
          <div className="subject-title">–ü–∞—Ä–∏ –Ω–µ–º–∞—î</div>
        </div>
      );
    }

    return (
      <div key={index} className="subject-card">
        {isEditing ? (
          <>
            <input
              type="text"
              value={editValues.title}
              onChange={(e) => setEditValues({ ...editValues, title: e.target.value })}
            />
            <input
              type="text"
              value={editValues.teacher}
              onChange={(e) => setEditValues({ ...editValues, teacher: e.target.value })}
            />
            <input
              type="text"
              value={editValues.type}
              onChange={(e) => setEditValues({ ...editValues, type: e.target.value })}
            />
            <input
              type="text"
              value={editValues.room}
              onChange={(e) => setEditValues({ ...editValues, room: e.target.value })}
            />
            <div className="edit-buttons">
              <button onClick={() => saveEditing(pairIndex, index)}>üíæ</button>
              <button onClick={cancelEditing}>‚ùå</button>
            </div>
          </>
        ) : (
          <>
            <div className="subject-title">
              {subj.title}
              <button onClick={() => startEditing(pairIndex, index, subj)} className="edit-btn">
                ‚úèÔ∏è
              </button>
            </div>
            <div className="subject-info">{subj.teacher}</div>
            <div className="subject-info">{subj.type}</div>
            <div className="subject-room">{subj.room}</div>
            {subj.online && (
              <a href="#" className="online-link">
                URL –æ–Ω–ª–∞–π–Ω –∑–∞–Ω—è—Ç—Ç—è
              </a>
            )}
          </>
        )}
      </div>
    );
  };

  return (
    <div className="schedule-container">
      <header className="app-header">
        <h1>üìÖ –ú—ñ–π —Ä–æ–∑–∫–ª–∞–¥</h1>
        <div className="header-controls">
          <div className="search-container">
            <select value={searchType} onChange={(e) => setSearchType(e.target.value)}>
              <option value="title">–ü—Ä–µ–¥–º–µ—Ç</option>
              <option value="teacher">–í–∏–∫–ª–∞–¥–∞—á</option>
              <option value="both">–ü—Ä–µ–¥–º–µ—Ç –∞–±–æ –≤–∏–∫–ª–∞–¥–∞—á</option>
            </select>
            <input
              type="text"
              placeholder="üîç –í–≤–µ–¥—ñ—Ç—å –∑–∞–ø–∏—Ç..."
              value={searchTerm}
              onChange={(e) => setSearchTerm(e.target.value)}
            />
          </div>
          <button
            className="week-toggle"
            onClick={() =>
              setWeek(week === "–¶–µ–π —Ç–∏–∂–¥–µ–Ω—å" ? "–ù–∞—Å—Ç—É–ø–Ω–∏–π —Ç–∏–∂–¥–µ–Ω—å" : "–¶–µ–π —Ç–∏–∂–¥–µ–Ω—å")
            }
          >
            {week}
          </button>
        </div>
      </header>

      <div className="day-switcher">
        {/* –ö–Ω–æ–ø–∫–∏ –ø–æ –¥–Ω—è—Ö –±—É–¥—É—Ç—å –∑–∞–≤–∂–¥–∏ –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω—ñ */}
        {Object.keys(weeklySchedule).map((day) => (
          <button
            key={day}
            onClick={() => setSelectedDay(day)}
            className={selectedDay === day ? "active-day" : ""}
          >
            {day}
          </button>
        ))}
      </div>

      {/* –í—ñ–¥–æ–±—Ä–∞–∂–∞—î–º–æ —Ñ—ñ–ª—å—Ç—Ä–æ–≤–∞–Ω—ñ —É—Ä–æ–∫–∏ –≤–∏–±—Ä–∞–Ω–æ–≥–æ –¥–Ω—è */}
      {lessonsForSelectedDay.length === 0 ? (
        <p style={{ textAlign: "center", color: "#777" }}>–ü–∞—Ä –Ω–µ–º–∞—î</p>
      ) : (
        lessonsForSelectedDay.map((lesson, pairIndex) => (
          <div key={pairIndex} className="lesson-block">
            <div className="lesson-header">
              <span>{lesson.pair}</span>
              <span>{lesson.time}</span>
            </div>
            <div className="subjects">
              {lesson.subjects.map((subj, subjIndex) =>
                renderSubject(subj, subjIndex, pairIndex)
              )}
            </div>
          </div>
        ))
      )}
    </div>
  );
};

export default Schedule;





